html {
	min-height: 100%;
	min-width: 100%;
	text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}

body {
	min-height: 100%;
	text-align: center;
	margin: 0;
	margin-top: 7px;

	padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);

	--top-color: #b7e9b4;
	--bottom-color: #ebebad;
	background: linear-gradient(var(--top-color), var(--bottom-color)) no-repeat center center fixed;
}

.preload * {
	transition: none !important;
}

#title {
	transition: color 0.33s ease;
}

#title:hover {
	color: rgb(0, 94, 255);
}

#title:active {
	color: rgb(0, 66, 181);
}

.darkmode--activated #title:hover {
	color: blue;
}

.darkmode--activated #title:active {
	color: rgb(80, 80, 255);
}

#output,
#meme,
#upload {
	display: none;
	visibility: hidden;
	align-self: center;
}

img {
	user-select: none;
}

img:not(#mirror) {
	-webkit-touch-callout: none;
}

#mirror {
	max-width: 100%;
	height: auto;
	max-height: 350px;
}

#note p {
	margin: 7px;
}

label * {
	vertical-align: middle;
}

#modeRadios {
	display: inline-block;
	width: 100%;
}

#modeRadios>* {
	margin: min(3%, 30px);
	white-space: nowrap;
	font-size: min(22px, 5vw);
}

input[type="radio"] {
	height: 20px;
	width: 20px;
}

form#controls {
	max-width: 500px;
	margin: 0 auto;
	font-size: larger;
}

div.inputField,
label.inputField {
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 10px;
}

.inputField label,
label.inputField {
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 15px;
}

#captionControls {
	display: block;
	width: 100%;
}

#caption,
#imagein,
#mathin {
	font-size: large;
	border: 2px solid black;
	padding: 7px;
	border-radius: 5px;
	width: 100%;
}

#imagein {
	display: inline-flex;
	font-size: medium;
	background-color: white;
	transition: all 0.3s ease;
}

.darkmode--activated #imagein {
	background-color: rgba(0, 0, 0, 0);
	color: black;
}

#note {
	color: red;
	margin-top: 7px;
}

.btn-group {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: 10px;

	max-width: 900px;

	margin: auto;
	margin-block-start: 15px;

	padding: 0 20px;
}

.btn,
.btn.darkmode-ignore {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 5px;

	min-height: 50px;
	min-width: 245px;
	width: max-content;

	padding: 0 15px;
	margin: 0;

	border-radius: 5px;
	background-color: #00a6e3;
	box-shadow: inset 0 -3px 8px 2px #414b72;
	color: white;

	font-size: medium;
	font-weight: bold;
	font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
		"Lucida Sans Unicode", Geneva, Verdana, sans-serif;
}

.btn:hover {
	background-color: #21c201;
}

.btn:active {
	background-color: #28e103;
}

.btn:disabled {
	background-color: #97adb6;
}

.btn img {
	pointer-events: none;
}

#views {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	width: 100%;
}

#views * {
	max-height: 350px;
	box-sizing: content-box;
}

#views *+* {
	margin-top: 10px;
}

#camera--frame {
	position: relative;
}

#camera {
	display: inline-block;
}

#camera--trigger {
	position: absolute;
	min-width: 3.5rem;
	width: 13%;
	bottom: 0;
	left: min(43.5%, 50% - 1.75rem);
}

#camera--trigger:hover {
	filter: brightness(0.9);
}

#camera--trigger:active {
	filter: brightness(0.6);
}

#camera--trigger.disabled {
	opacity: 0;
}

#camera--flip {
	position: absolute;
	min-width: 3.5rem;
	width: 13%;
	bottom: -3px;
	right: 7px;
}

#camera--flip.disabled {
	opacity: 0;
}

#camera--flip:hover {
	filter: brightness(0.9);
}

#camera--flip:active {
	filter: brightness(0.6);
}

#camera--frame {
	margin: 0;
	padding: 0;
}

#camera--view {
	object-fit: cover;
	max-width: 100%;
	height: max(auto, 350px);
	object-position: center;
	transform: scaleX(-1);
}

#camera--view::-webkit-media-controls {
	display: none;
	pointer-events: none;
}

#camera--toggle:hover {
	filter: brightness(0.9);
}

#camera--toggle:active {
	filter: brightness(0.6);
}

.invisible {
	visibility: hidden;
}

.exclude {
	display: none;
}

.icon {
	max-width: min(10%, 30px);
	vertical-align: middle;
}

#camera--sensor {
	display: none;
}

#sv-link {
	display: contents;
	text-decoration: none;
}

.box {
	display: block;
	max-width: 80rem;
	width: 90vw;
	background-color: rgba(255, 233, 210, 0.85);
	border-radius: 10px;
	padding: 5px 10px;
	transition: background-color 0.4s linear;

	margin: 0 auto;
}

.darkmode--activated .box {
	background-color: rgba(255, 215, 170, 0.75);
}

div.darkmode-background {
	--top-color: #ffffff;
	--bottom-color: rgb(225, 225, 225);
	background: linear-gradient(var(--top-color), var(--bottom-color)) fixed no-repeat;

	opacity: 0;
	transition: opacity 0.3s linear;
	min-height: 100%;
}

.darkmode--activated .darkmode-background {
	opacity: 1;
}

.darkmode-toggle {
	z-index: 5;
	font-size: larger;
}

.darkmode-toggle:hover {
	filter: brightness(0.9);
}

#errorBox {
	display: flex;
	position: fixed;
	background-color: rgba(255, 0, 0, 0.85);
	height: 100px;
	width: 400px;
	bottom: 15px;
	left: 15px;
	border-radius: 7px;
	transition: opacity linear 2s;
	align-items: center;
	box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);
	z-index: 5;
}

.fade {
	opacity: 0;
}

#errorCloseButton {
	align-self: stretch;
	border-radius: 7px;
	width: 75px;
	font-size: xx-large;
}

#errorBoxMessage {
	padding: 0 5px;
	color: white;
	text-shadow: 1px 1px 2px black;
}

.external-link:any-link {
	color: blue;
	font-weight: bold;
	text-decoration: none;
	transition: color linear 0.2s;
}

.external-link:hover {
	color: #21c201;
	text-decoration: underline;
}

.darkmode--activated .external-link:any-link {
	color: yellow;
}

.darkmode--activated .external-link:hover {
	color: #21c201;
}

.microphone:hover {
	filter: brightness(0.9);
}

.microphone:active {
	filter: brightness(0.6);
}

#language-label {
	display: block;
	margin-block: 20px;
	font-size: large;
	color: black;
	transition: color linear 0.15s;
}

#language-selector {
	transform: scale(1.2, 1.2);
	margin-left: 10px;
}

#mockTypeLabel {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 20px;

	width: min(100%, 500px);
	margin-block-start: 10px;
	vertical-align: middle;
}

#mockTypeLabelText {
	min-width: max-content;
	width: 105px;
}

#mockType-selector {
	transform: scale(1, 1);
	font-size: medium;
	width: 100%;
}

.btn .icon {
	width: 22px;
	filter: invert(1);
}

@media (max-width: 650px) {
	.btn-group {
		max-width: 500px;
		padding: 0;
	}

	.btn,
	.btn.darkmode-ignore {
		min-width: fit-content;
		width: 100%;
	}

	#errorBox {
		width: calc(100% - 30px);
	}
}